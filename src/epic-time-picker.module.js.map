{"version":3,"sources":["../dev/src/epic-time-picker.module.ts"],"names":[],"mappings":"AAAA,SAAC;AACG,OAAO,EAAE,QAAA,EAAS,MAAO,eAAA,CAAgB;AACzC,OAAO,EAAE,YAAA,EAAa,MAAO,iBAAA,CAAkB;AAC/C,OAAO,EAAE,cAAA,EAA+B,MAAO,mBAAA,CAAoB;AACnE,OAAO,EAAc,IAAA,EAAK,MAAM,eAAA,CAAgB;AAEpD,OAAO;AACH,OAAO,EAAE,eAAA,EAAgB,MAAO,sBAAA,CAAuB;AACvD,OAAO,EAAE,iBAAA,EAAkB,MAAO,wBAAA,CAAyB;AAE/D,YAAY;AACR,OAAO,EAAE,mBAAA,EAAoB,MAAO,yBAAA,CAA0B;AAC9D,OAAO,EAAE,eAAA,EAAgB,MAAO,qBAAA,CAAsB;AAG1D,eAAe;AACX,OAAO,EAAE,eAAA,EAAiB,eAAA,EAAgB,MAAO,qBAAA,CAAsB;AACvE,OAAO,EAAE,mBAAA,EAAoB,MAAO,4BAAA,CAA6B;AAGjE,kDAAkD;AAClD,MAAM,4BAA4B,IAAM;IACpC,MAAM,CAAC,IAAI,mBAAA,CAAoB,IAAC,EAAK,iBAAA,EAAmB,OAAA,CAAQ,CAAC;AACrE,CAAC;AAGD;IAAA;IAkCJ,CAAC;IAAD,2BAAC;AAAD,CAlCI,AAkCH;;AAlC8C,+BAAU,GAA0B;IACnF,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;gBACnB,OAAO,EAAE;oBACP,YAAY;oBACZ,cAAc,CAAC,OAAO,EAAE;oBACxB,WAAW;oBACX,eAAe,CAAC,QAAQ,CAAC;wBACrB,MAAM,EAAE;4BACJ,OAAO,EAAE,eAAe;4BACxB,UAAU,EAAE,iBAAiB;4BAC7B,IAAI,EAAE,CAAC,IAAI,CAAC;yBACf;qBACJ,CAAC;iBACH;gBACD,OAAO,EAAE;oBACP,mBAAmB;oBACnB,eAAe;oBACf,eAAe;oBACf,iBAAiB;iBAClB;gBACD,YAAY,EAAE;oBACZ,mBAAmB;oBACnB,eAAe;oBACf,eAAe;oBACf,iBAAiB;iBAClB;gBACD,eAAe,EAAE;oBACf,eAAe;iBAChB;aACF,EAAG,EAAE;CACT,CAAC;AACF,kBAAkB;AACX,mCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC","file":"epic-time-picker.module.js","sourceRoot":"","sourcesContent":["//ANGULAR\n    import { NgModule } from '@angular/core';\n    import { CommonModule } from '@angular/common';\n    import { MaterialModule, MdIconRegistry } from '@angular/material';\n    import { HttpModule, Http} from '@angular/http';\n\n//PIPES\n    import { EpicUTCTimePipe } from './epic-utc-time.pipe';\n    import { EpicLocalTimePipe } from './epic-local-time.pipe';\n\n//COMPONENTS\n    import { TimePickerComponent } from './time-picker.component';\n    import { TimePickerModal } from './time-picker.modal';\n\n\n//NGX-TRANSLATE\n    import { TranslateModule, TranslateLoader } from '@ngx-translate/core';\n    import { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\n\n    // AoT requires an exported function for factories\n    export function HttpLoaderFactory(http: Http) {\n        return new TranslateHttpLoader(http, \"../assets/i18n/\", \".json\");\n    }\n\n    \n    export class EpicTimePickerModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n      imports: [\n        CommonModule,\n        MaterialModule.forRoot(),\n        //TRANSLATE\n        TranslateModule.forChild({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [Http]\n            }\n        })\n      ],\n      exports: [\n        TimePickerComponent,\n        TimePickerModal,\n        EpicUTCTimePipe,\n        EpicLocalTimePipe\n      ],\n      declarations: [\n        TimePickerComponent,\n        TimePickerModal,\n        EpicUTCTimePipe,\n        EpicLocalTimePipe\n      ],\n      entryComponents: [\n        TimePickerModal\n      ]\n    }, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}