{"version":3,"sources":["../dev/src/time-picker.modal.ts"],"names":[],"mappings":"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","file":"time-picker.modal.js","sourceRoot":"","sourcesContent":["//ANGULAR\n    import { Component, Input, Output, EventEmitter } from '@angular/core';\n    import { MdDialogRef } from '@angular/material';\n\n//CONFIG\n    export class Config {\n        descriptor?: TimeDescriptors;\n        state?: States;\n        type?: Types;\n        date?: Date;\n        constructor(config: Config){\n            this.descriptor = config.descriptor || TimeDescriptors.HR24;\n            this.state = config.state !== undefined ? config.state : States.HOUR;\n            this.date = config.date || new Date();\n            this.type = config.type || Types.DATETIME;\n        }\n}\n\n//ENUMS\n\n    export enum States  { YEAR = 0, MONTH = 1, DAY = 2, HOUR=3, MINUTE=4, ABBR=5 }\n\n    export enum TimeDescriptors { AM, PM, HR24, Z }\n\n    export enum Types { DATETIME = 0, DATE = 1, TIME = 2 }\n\n/* TimePickerComponent */\n    \n    export class TimePickerModal {\n\n//INPUTS\n        get local(): boolean {\n            return this.abbrVal !== TimeDescriptors.Z;\n        };\n\n//VARIABLES\n        public hours: number[] = [];\n        public hours24: number[] = [];\n        public minutes: number[] = [];\n        public months: number[] = [];\n        public days: number[] = [];\n        public abbrs: TimeDescriptors[] = [];\n        public yearVal: number;\n        public prevYearVal: number;\n        public monthVal: number;\n        public dayVal: number;\n        public prevDayVal: number;\n        public hourVal: number;\n        public prevHourVal: number;\n        public minuteVal: number;\n        public prevMinuteVal: number;\n        public abbrVal: TimeDescriptors;\n        public state: States;\n        public States = States;\n        public TimeDescriptors = TimeDescriptors;\n        public Types = Types;\n        public date: Date;\n        private hasInput: boolean = false;\n        public config: Config;\n        public HOUR = 60 * 60 * 1000;\n\n\n        set numberValue(n: number){\n            if(this.state === States.DAY)\n                this.dayVal = n;\n            if(this.state === States.YEAR)\n                this.yearVal = n;\n        }\n        get numberValue(): number{\n            if(this.state === States.DAY)\n                return this.dayVal;\n            if(this.state === States.YEAR)\n                return this.yearVal;\n        }\n\n//LIFE CYCLE HOOKS\n        constructor(public dialogRef: MdDialogRef<TimePickerModal>){\n            for(let i = 1; i <= 12; i++){\n                this.hours.push(i);\n            }\n            for(let i = 0; i < 24; i++){\n                this.hours24.push(i);\n            }\n            for(let i = 0; i < 60; i++){\n                this.minutes.push(i);\n            }\n            for(let i = 0; i < 12; i++){\n                this.months.push(i);\n            }\n            for(let i = 1; i < 31; i++){\n                this.days.push(i);\n            }\n            for(let i = 0; i < 4; i++){\n                this.abbrs.push(i);\n            }\n        }\n\n        ngOnInit() {\n            this.config = this.dialogRef.config.data.config;\n            this.abbrVal = this.config.descriptor;\n            this.setTime(this.config.date);\n            this.setState(this.config.state);\n        }\n\n\n//FUNCTIONS\n        disableButton(n: number): boolean{\n            if(!this.hasInput) return false;\n            switch(this.state){\n                case States.YEAR:\n                    if(n < 0) return this.yearVal === null;\n                    return this.yearVal > 999;\n                case States.DAY:\n                    if(n < 0) return this.dayVal === null;\n                    if(this.dayVal === null) return false;\n                    if(this.dayVal > 3) return true;\n                    if(this.dayVal === 3 && this.monthVal === 1) return true;\n                    if(this.dayVal === 2 && this.monthVal === 1 && n < 9) return false;\n                    if(this.dayVal === 2 && this.monthVal === 1 && n === 9) return !this.hasExtraDay(this.monthVal);\n                    if(this.dayVal === 3 && this.hasExtraDay(this.monthVal)) n > 1;\n                    if(this.dayVal === 3 && !this.hasExtraDay(this.monthVal)) return n > 0;\n                    if(this.dayVal < 3) return false;\n            }\n        }\n        private hasExtraDay(month: number): boolean{\n            if( month < 0 || 12 < month) return undefined;\n            let m = Math.floor(month);\n            if(m === 1 && this.yearVal % 4 === 0) return true;\n            if(m < 7 && m % 2 === 0) return true;\n            else if(m > 6 && m % 2 === 1) return true;\n            else return false; \n        }\n        public convertToClockHour(h: number){\n            if(h > 12){\n                return h - 12;\n            }\n            return h;\n        }\n        addZero(n: number){\n            if(n === null) return null;\n            if(n < 10)\n                return \"0\"+n;\n            else return n;\n        }\n        formatYear(year: number){\n            if(year === null){\n                return '----';\n            }\n            else if(year < 10){\n                return '000' + year;\n            }\n            else if(year < 100){\n                return '00' + year;\n            }\n            else if(year < 1000){\n                return '0' + year;\n            }\n            else return year;\n        }\n        formatMonth(month: number){\n            if(month === null){\n                return '--';\n            }\n            else if(month < 10){\n                return '0' + (month + 1);\n            }\n            else return month + 1;\n        }\n        formatDay(day: number){\n            if(day === null){\n                return '--';\n            }\n            else if(day < 10){\n                return '0' + day;\n            }\n            else return day;\n        }\n        formatHour(hour: number){\n            \n            if(hour === null){\n                return '--';\n            }\n            else if(hour < 10){\n                return '0' + hour;\n            }\n            else {\n                if(this.abbrVal === TimeDescriptors.PM)\n                    return hour < 10 ? '0' + hour : hour;\n                else{\n                    return hour;\n                }\n            };\n        }\n        formatMinute(minute: number){\n            if(minute === null){\n                return '--';\n            }\n            else if(minute < 10){\n                return '0' + minute;\n            }\n            else return minute;\n        }\n        setAbbr(abbr: TimeDescriptors){\n            if(abbr !== this.abbrVal){\n                let prevAbbr = this.abbrVal;\n                this.abbrVal = abbr;\n                let hour = this.date.getHours();\n                switch(prevAbbr){\n                    case TimeDescriptors.AM:\n                        switch(abbr){\n                            case TimeDescriptors.PM:    //AM -> PM\n                                if(hour < 12){\n                                    this.date.setHours(hour + 12);\n                                    this.setTime(this.date);\n                                }\n                                else {\n                                    this.abbrVal = TimeDescriptors.AM;\n                                }\n                            break;\n                            case TimeDescriptors.HR24:  //AM -> HR24\n                            case TimeDescriptors.Z:     //AM -> Z\n                                this.setTime(this.date);\n                            break;\n                        }\n                    break;\n                    case TimeDescriptors.PM:\n                        switch(abbr){\n                            case TimeDescriptors.AM:    //PM -> AM\n                                if(hour >= 12){\n                                    this.date.setHours(hour - 12);\n                                    this.setTime(this.date);\n                                }\n                                else {\n                                    this.abbrVal = TimeDescriptors.PM;\n                                }\n                            break;\n                            case TimeDescriptors.HR24:  //PM -> HR24\n                            case TimeDescriptors.Z:     //PM -> Z\n                                this.setTime(this.date);\n                            break;\n                        }\n                    break;\n                    case TimeDescriptors.HR24:\n                        switch(abbr){\n                            case TimeDescriptors.AM:    //HR24 -> AM\n                                if(hour >= 12){\n                                    this.date.setHours(hour - 12);\n                                }\n                                this.setTime(this.date);\n                            break;\n                            case TimeDescriptors.PM:    //HR24 -> PM\n                                if(hour < 12){\n                                    this.date.setHours(hour + 12);\n                                }\n                                this.setTime(this.date);\n                            break;\n                            case TimeDescriptors.Z:     //HR24 -> Z\n                                this.setTime(this.date);\n                            break;\n                        }\n                    case TimeDescriptors.Z:\n                        switch(abbr){\n                            case TimeDescriptors.AM:    //Z -> AM\n                                if(hour >= 12){\n                                    this.date.setHours(hour - 12);\n                                }\n                                this.setTime(this.date);\n                            break;\n                            case TimeDescriptors.PM:    //Z -> PM\n                                if(hour < 12){\n                                    this.date.setHours(hour + 12);\n                                }\n                                this.setTime(this.date);\n                            break;\n                            case TimeDescriptors.HR24:  //Z -> HR24\n                                this.setTime(this.date);\n                            break;\n                        }\n                    break;\n                }                \n            }\n        }\n        setTime(t: any){\n            this.date = new Date(t);\n            if(this.local){\n                this.hourVal = this.date.getHours();\n                this.minuteVal = this.date.getMinutes();\n                this.yearVal = this.date.getFullYear();\n                this.monthVal = this.date.getMonth();\n                this.dayVal = this.date.getDate();\n            }\n            else{\n                this.hourVal = this.date.getUTCHours();\n                this.minuteVal = this.date.getUTCMinutes();\n                this.yearVal = this.date.getUTCFullYear();\n                this.monthVal = this.date.getUTCMonth();\n                this.dayVal = this.date.getUTCDate();\n            }\n        }\n        setYear(year: number){\n            if(this.local){\n                this.date.setFullYear(year);\n            }\n            else{\n                this.date.setUTCFullYear(year);\n            }\n            this.yearVal = year;\n        }\n        setMonth(month: number, next: boolean = false){\n            if(this.local){\n                this.date.setMonth(month);\n            }\n            else{\n                this.date.setUTCMonth(month);\n            }\n            this.monthVal = month;\n            if(next){\n                this.setState(States.DAY);\n            }\n        }\n        setHour(hour: number, next: boolean = false){\n            if(hour !== this.hourVal){\n                if(this.local){                    \n                    this.date.setHours(hour + (this.abbrVal === TimeDescriptors.PM ? 12 : 0));\n                }\n                else{\n                    this.date.setUTCHours(hour);\n                }\n                if(this.hourVal !== null)\n                    this.prevHourVal = this.hourVal;\n                else\n                    this.prevHourVal = null;\n                this.hourVal = hour;\n                if(next){\n                    let numHours;\n                    if(this.abbrVal === TimeDescriptors.HR24 || this.abbrVal === TimeDescriptors.Z){\n                        numHours = 24;\n                    }\n                    else{\n                        numHours = 12;\n                    }\n                    let arc = Math.abs(((this.prevHourVal % numHours) - (this.hourVal % numHours)) / numHours);\n                    let duration = 2;\n                    let delay = duration - duration*arc;\n                    let runTime = duration - delay;\n                    setTimeout(()=>{\n                        this.setState(States.MINUTE);\n                    }, runTime*1000 + 500);\n                }\n            }\n        }\n        setMinute(minute: number){\n            if(minute !== this.minuteVal){\n                if(this.local){\n                    this.date.setMinutes(minute);\n                }\n                else{\n                    this.date.setUTCMinutes(minute);\n                }\n                this.prevMinuteVal = this.minuteVal || 0;\n                this.minuteVal = minute;\n            }\n        }\n        setState(state: States){\n            this.hasInput = false;\n            this.state = state;\n            this.prevHourVal = null;\n            this.prevMinuteVal = null;\n        }\n        dismiss(submitChange: boolean){\n            if(submitChange){\n                this.dialogRef.close(this.date);\n            }\n            else{\n                this.dialogRef.close();\n            }\n        }\n        //EVENTLISTENER\n        numberPadClicked($event: number | string){\n            switch($event){\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                    if(!this.hasInput){\n                        this.numberValue = $event;\n                    }\n                    else {\n                        if(this.numberValue !== null){\n                            this.numberValue = parseInt(this.numberValue.toString() + $event);\n                        }\n                        else{\n                            this.numberValue = $event;\n                        }\n                    }\n                    break;\n                case 'DEL':\n                    if(this.numberValue){\n                        let s = this.numberValue.toString();\n                        if(s.length === 1){\n                            this.numberValue = null;\n                        }\n                        else {\n                            this.numberValue = parseInt(s.substr(0, s.length - 1));\n                        }\n                    }\n                    break;\n                case 'OK':\n                    if(this.state === States.YEAR){\n                        this.setState(States.MONTH);\n                    }\n                    else if(this.state === States.DAY){\n                        if(this.config.type === Types.DATE)\n                            this.setState(States.ABBR);\n                        else if(this.config.type === Types.DATETIME){\n                            this.setState(States.HOUR);\n                        }\n                        else{\n                            return this.dismiss(false); //something went wrong, close the window without setting changes\n                        }\n                    }\n            }\n            if(this.state === States.YEAR){\n                if(this.local){\n                    this.date.setFullYear(this.yearVal);\n                }\n                else {\n                    this.date.setUTCFullYear(this.yearVal);\n                }\n            }\n            else if(this.state === States.DAY){\n                if(this.local){\n                    this.date.setDate(this.dayVal);\n                }\n                else {\n                    this.date.setUTCDate(this.dayVal);\n                }\n            }\n            this.hasInput = true;\n        }\n    static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n        templateUrl: './time-picker.modal.html',\n        styleUrls: [\n            './time-picker.modal.scss', \n            './time-picker-rotation-keyframes.modal.scss'\n        ]\n    }, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MdDialogRef, },\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}