{"version":3,"sources":["../dev/src/epic-utc-time.pipe.ts"],"names":[],"mappings":"AAAA,SAAC;AACG,OAAO,EAAE,IAAA,EAAoB,MAAO,eAAA,CAAgB;AAExD,kHAAkH;AAE9G;IAAA;IAiDJ,CAAC;IAhDO,mCAAS,GAAT,UAAU,OAAe,EAAE,MAAc;QACrC,EAAE,CAAA,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACV,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,MAAM,CAAC,CAAC;IACjD,CAAC;IAEL;0BACsB;IAClB,iCAAO,GAAP,UAAQ,CAAC;QACL,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YACT,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,CAAC,CAAC;IACb,CAAC;IAEL;;OAEG;IACC,+BAAK,GAAL,UAAM,IAAU,EAAE,MAAc;QAC5B,IAAI,MAAM,GAAW,MAAM,CAAC;QAE5B,IAAI,IAAI,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC;QAC9B,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;QAErE,IAAI,EAAE,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC;QAC1B,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAEhE,IAAI,EAAE,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC;QAC1B,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;QAE/D,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC;QACxB,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;QAE5D,IAAI,EAAE,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC;QAC1B,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;QAElE,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC;QACxB,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;QAEnE,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IAOT,sBAAC;AAAD,CAjDI,AAiDH;;AANU,0BAAU,GAA0B;IAC/C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAC,IAAI,EAAE,aAAa,EAAC,EAAG,EAAE;CAC9C,CAAC;AACF,kBAAkB;AACX,8BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC","file":"epic-utc-time.pipe.js","sourceRoot":"","sourcesContent":["//ANGULAR\n    import { Pipe, PipeTransform } from '@angular/core';\n\n/* EpicUTCDatePipe - returns a utc date formatted. look into replacing this with the built in angular date pipe */\n    \n    export class EpicUTCTimePipe implements PipeTransform {\n        transform(isoDate: string, config: string):  string{\n            if(!isoDate) {\n                return null;\n            }\n            return this.parse(new Date(isoDate), config);\n        }\n\n    /* addZero() - adds a preceding 0 to a number under 10\n        @params: number */\n        addZero(i): string {\n            if (i < 10) {\n                i = \"0\" + i;\n            }\n            return i;\n        }\n\n    /** parse()\n     * \n     */\n        parse(date: Date, format: string){\n            let result: string = format;\n\n            let yyyy = new RegExp('yyyy');\n            result = result.replace(\"yyyy\", this.addZero(date.getUTCFullYear()));\n\n            let hh = new RegExp('hh');\n            result = result.replace(\"hh\", this.addZero(date.getUTCHours()));\n\n            let dd = new RegExp('dd');\n            result = result.replace(\"dd\", this.addZero(date.getUTCDate()));\n\n            let h = new RegExp('h');\n            result = result.replace(\"h\", date.getUTCHours().toString());\n\n            let mm = new RegExp('mm');\n            result = result.replace(\"mm\", this.addZero(date.getUTCMinutes()));\n\n            let m = new RegExp('m');\n            result = result.replace(\"m\", this.addZero(date.getUTCMonth() + 1));\n            \n            return result;\n        }\n    static decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'epicUTCTime'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}